Git - система контроля версий. 
Это незаменимый помошник разработчика и любого другого человека,
который работает с каталогами папок и файлами. 
Система контроля версий записывает состояние папок и файлов на протяжении
работы и не даёт потерять никакую версию. Вы всегда можете вернуться на 
любой этап разработки, посмотреть все изменения, комментарии, действия
каждого из разработчиков в обновлении проекта.

Git не один такой инструмент, но универсальность и удобство его в 
использовании дают ему преимущество над аналогами. 

Вот короктое описанная поэтапность работы с Git:
1. Вносятся изменения в файлы вашей рабочей копии. 
2. Выборочно добавляются в индекс те изменения которые нужно закоммитить.
   Тем самым добавляются снимки только выбранных изменений для индексации
   при коммите.
3. Происходит коммит при котором используются файлы из индекса. Сделанный
   снимок сохраняется в каталог Git.

--------------------
Установка Git Linux

Установка как биннарный пакет:
$ sudo dnf install git-all 

Если у вас дистрибутив на Debian:
$ sudo apt install git

Установка на Мак:
$ git 
Если Git не установлен, вам будет предложено его установить.

Установка на Windows:
Можно просто скачать исходники и следовать установщику.
Либо же пройти в официальную документацию и получить более 
подробную информацию про установку и настройку под вашу операционную систему.
------------------------------------------------------------------------------

После установки Git на ваш компьютер, необходимо пройти короткую настройку,
установить свой email, имя и фамилию. 

Список команд для работы с системой Git вы можете получить введя 
в консоль команду:
$ git help config

Для получения краткого описания опций введите:
$ git add -h

Это были очень сжатые азы про систему Git.
Дальше можно приступать к использованию этого инструмента и ниже вы найдёте некоторые
базовые команды для начала работы с Git и удалённым репозитарием.


----------------------------------------------------------------------------------------

Если у вас есть проект который еще не находится под контролем Git, для начала 
работы с ним вам необходимо перейти в каталог этого проекта:

$ cd /home/user/my_project - для Linux
$ cd /Users/user/my_project - для macOs
$ cd C:/Users/user/my_project - для Windows

И затем выполнить команду:

$ git init

Указанная выше команда создаёт подкаталог .git
Ваш проект всё еще не под версионным контролем, продолжим

$ git add *

Теперь у нас есть Git репозиторий с отслеживаемыми файлами и начальным коммитом.

-----------------------------

Для получения копии используется команда 

$ git clone

------------------------------

Для определения состояния файлов используется команда 
$ git status

Она выведет подробности о состоянии вашего проекта и его незакомиченных но изменённых 
файлов. 


Для отслеживания определённого файла спользуется:
$ git add EXEMPLE 

----------------------------------------------

Коммит изменений

$ git commit -m "New commit"

Где прописываете в кавычках, какие изменения были сделаны. 
Нужно внимательно, и желательно, очень обдуманно подходить к комментарию.

Для того, чтобы удалить файл из git необходимо удалить его из отслеживаемых 
файлов, удалить его из индекса. 

$ git rm 

--------------------------------------------------

При работе с удалённым репозитарием найболее часто используются команды:

$ git pull
И
$ git push 

Это команды которые позволяют добавить или получить актуальные
изменения на/с с заранее подключённого репозитария. 
